{"version":3,"sources":["assets/image.png","components/navbar/navbar.component.jsx","components/footer/footer.component.jsx","pages/home/home.page.jsx","pages/about/about.page.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","class","href","Footer","year","Date","getFullYear","rel","target","Home","loop","Infinity","wrapper","steps","About","src","image","alt","App","exact","path","render","window","location","component","React","Component","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,mC,qTCgB5BC,G,YAbA,WAEX,OACI,4BAAQC,UAAU,UACd,wBAAIC,MAAM,cACN,wBAAIA,MAAM,mBAAkB,uBAAGA,MAAM,aAAaC,KAAK,SAA3B,SAC5B,wBAAID,MAAM,mBAAkB,uBAAGA,MAAM,aAAaC,KAAK,UAA3B,UAC5B,wBAAID,MAAM,mBAAkB,uBAAGA,MAAM,aAAaC,KAAK,WAA3B,eCqC7BC,G,YA3CA,WACX,IAAMC,GAAO,IAAIC,MAAOC,cAExB,OACA,yBAAKN,UAAU,UACX,0BAAMA,UAAY,eAAlB,gIACA,6BACA,wBAAIA,UAAU,gBACV,4BACI,6BACE,uBAAGE,KAAK,gCAAgCK,IAAI,sBAAsBC,OAAO,UAAS,uBAAGR,UAAU,+BAA8B,yBAAKA,UAAY,eAAjB,gBAGjI,4BACE,6BACE,uBAAGE,KAAK,+BAA+BK,IAAI,sBAAsBC,OAAO,UAAS,uBAAGR,UAAU,+BAA8B,yBAAKA,UAAY,eAAjB,cAqBpI,gCACE,kDAAqBI,OCLlBK,EA5BF,WACX,OACE,yBAAKT,UAAU,aACb,kBAAC,EAAD,MACE,yBAAKA,UAAY,eACf,yBAAKA,UAAY,aACf,yBAAKA,UAAY,QAAjB,mBACA,yBAAKA,UAAY,SAAjB,UAAiC,GAC/B,kBAAC,IAAD,CACEU,KAAMC,IACNC,QAAQ,IACRC,MAAO,CACL,+BACA,IACA,+BACA,IACA,kCACA,UAMZ,kBAAC,EAAD,Q,yBCOSC,EAhCD,WACV,OACA,yBAAKd,UAAU,cACX,kBAAC,EAAD,MACA,yBAAKA,UAAY,SACb,yBAAKe,IAAKC,IAAOhB,UAAU,WAAWiB,IAAI,aAC1C,yBAAKjB,UAAY,cACb,yBAAKA,UAAY,SAAjB,UACA,yBAAKA,UAAY,cACb,yBAAKA,UAAY,aAAjB,4JAGA,yBAAKA,UAAY,aAAjB,gPAGA,yBAAKA,UAAY,aAAjB,iWAGA,yBAAKA,UAAY,aAAjB,uNAGA,yBAAKA,UAAY,aAAjB,0IAMZ,kBAAC,EAAD,QCROkB,E,uKAdX,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,OAAQ,WAAOC,OAAOC,SAASrB,KAAK,0BAChE,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,WAAWC,OAAQ,WAAOC,OAAOC,SAASrB,KAAK,0BACjE,kBAAC,IAAD,CAAOkB,KAAK,SAASI,UAAWV,IAChC,kBAAC,IAAD,CAAOM,KAAK,IAAII,UAAWf,W,GAVrBgB,IAAMC,WCIJC,QACW,cAA7BL,OAAOC,SAASK,UAEe,UAA7BN,OAAOC,SAASK,UAEhBN,OAAOC,SAASK,SAASC,MACvB,2DCZNC,IAAST,OACP,kBAAC,IAAMU,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.91a75f71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.395da6c4.png\";","import React from 'react';\nimport './navbar.styles.css';\n\nconst Navbar = () => {\n\n    return (\n        <navbar className='navbar'> \n            <ul class=\"menu__list\">\n                <li class=\"menu__list-item\"><a class=\"menu__link\" href=\"/home\">Home</a></li>\n                <li class=\"menu__list-item\"><a class=\"menu__link\" href=\"/about\">About</a></li>\n                <li class=\"menu__list-item\"><a class=\"menu__link\" href=\"/resume\">Resume</a></li>\n            </ul>\n        </navbar>\n    );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport 'font-awesome/css/font-awesome.css';\nimport './footer.styles.css';\n\nconst Footer = () => {\n    const year = new Date().getFullYear();\n\n    return (\n    <div className='footer'>\n        <span className = 'footer-info'> If you are interested in collaborating or want to share experiences and opportunities, please do not hesitate to reach out!</span>\n        <hr/>\n        <ul className=\"Social-Icons\">\n            <li>\n                <div>\n                  <a href=\"http://linkedin.com/in/lisaqc\" rel=\"noopener noreferrer\" target=\"_blank\"><i className=\"fa fa-linkedin icon tooltip\"><div className = 'tooltiptext'>LinkedIn</div></i></a>              \n                </div>\n              </li>\n              <li>\n                <div>\n                  <a href=\"mailto:lisachencal@gmail.com\" rel=\"noopener noreferrer\" target=\"_blank\"><i className=\"fa fa-envelope icon tooltip\"><div className = 'tooltiptext'>Email</div></i>\n                  </a>\n                </div>\n              </li>\n              {/* <li>\n                <div>\n                  <a href=\"http://instagram.com/itslisa.c\" rel=\"noopener noreferrer\" target=\"_blank\"><i className=\"fa fa-instagram icon tooltip\"><div className = 'tooltiptext'>Instagram</div></i></a>              \n                </div>\n              </li> */}\n              {/* <li>\n                <div>\n                  <a href=\"http://twitter.com/thelisaqc\" rel=\"noopener noreferrer\" target=\"_blank\"><i className=\"fa fa-twitter icon tooltip\"><div className = 'tooltiptext'>Twitter</div></i></a>              \n                </div>\n              </li>\n\n              <li>\n                <div>\n                  <a href=\"http://github.com/lisaqc\" rel=\"noopener noreferrer\" target=\"_blank\"><i className=\"fa fa-github icon tooltip\"><div className = 'tooltiptext'>Github</div></i></a>              \n                </div>\n              </li> */}\n            </ul>\n          <footer>\n            <p>Copyright © Lisa {year}</p>\n          </footer>\n    </div>\n    );\n};\n\nexport default Footer;\n","\nimport React from 'react';\nimport Typical from 'react-typical';\nimport './home.styles.css';\nimport Navbar from '../../components/navbar/navbar.component'\nimport Footer from '../../components/footer/footer.component';\n\n\nconst Home = () => {\n  return (\n    <div className=\"home-page\">\n      <Navbar/>\n        <div className = 'home-header'>\n          <div className = 'home-info'>\n            <div className = 'name'>HELLO, I'M LISA</div>\n            <div className = 'title'>I am a {''}\n              <Typical \n                loop={Infinity}\n                wrapper='b'\n                steps={[\n                  'Product Manager 💻', \n                  1000,\n                  'Content Creator 📸',\n                  1000,\n                  'Cooking Enthusaist 🍰',\n                  1000\n                ]}\n              />\n            </div>\n          </div>\n        </div>\n      <Footer/>\n      </div>\n    );\n};\n\nexport default Home;","import React from 'react';\nimport Navbar from '../../components/navbar/navbar.component'\nimport Footer from '../../components/footer/footer.component';\nimport './about.styles.css';\nimport image from '../../assets/image.png';\n\nconst About = () => {\n    return (\n    <div className='about-page'>\n        <Navbar/>\n        <div className = 'infos'>\n            <img src={image} className=\"headshot\" alt=\"headshot\" />\n            <div className = 'about-info'>\n                <div className = 'intro'>HELLO!</div>\n                <div className = 'paragraghs'>\n                    <div className = 'paragraph'>\n                        My name is Lisa Chen and I’m an aspiring product manger with a background in management and marketing. I’m currently based in Toronto, Canada. \n                    </div>\n                    <div className = 'paragraph'>\n                        I have always loved art and storytelling and this passion has transformed into a curosity in the development of a well designed product. I love to understand the user challenges and come up with the best way to improve their experience.\n                    </div>\n                    <div className = 'paragraph'>\n                        Currently, I worked at American Express as a product marketing manager focused on the Early Engagement portion ofthe customer journey. My goal is to make the onboarding process as smooth as possible for a new cardmember in all the platforms they may use. This includes the digital activation journeys, as well as the onboarding marketing curriculum.\n                    </div>\n                    <div className = 'paragraph'>\n                        Outside of work, I am an avid cook and baker, and you can always find me in the kitchen trying out new recipes. I also love to create content in my spare time and share my recipes with people all over the world! \n                    </div>\n                    <div className = 'paragraph'>\n                        If you are interested in chatting, or just want to share across experiences and opportunities, please do not hesitate to reach out!\n                    </div>\n                </div>\n            </div>\n        </div>\n        <Footer/>\n    </div>\n    );\n};\n\nexport default About;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Home from \"./pages/home/home.page\";\nimport About from \"./pages/about/about.page\";\n// import Project from \"./pages/project/project.component\";\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <BrowserRouter> \n          <Switch>\n            <Route exact path=\"/resume\" render={() => {window.location.href=\"/LisaChen_Resume.pdf\"}} />\n            <Route exact path=\"/resume/\" render={() => {window.location.href=\"/LisaChen_Resume.pdf\"}} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/\" component={Home} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\nexport default App;\n\n\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}